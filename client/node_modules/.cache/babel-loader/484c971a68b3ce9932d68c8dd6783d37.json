{"ast":null,"code":"var _jsxFileName = \"/home/tuure/projects/preassignments/preassignment_vincit/src/App.js\";\nimport React, { useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport './App.css';\nconst styles = {\n  center: {\n    margin: 0,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    MsTransform: \"translate(-50%, -50%)\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  },\n  roundButton: {\n    borderRadius: \"50%\",\n    padding: 58,\n    backgroundColor: \"#ff4f28\",\n    outline: \"none\",\n    fontSize: \"30px\",\n    fontFamily: \"Montserrat\",\n    textShadow: \"4px 4px black\",\n    color: \"white\",\n    lineHeight: 1.9,\n    boxShadow: \"5px 10px #282828\",\n    marginBottom: \"80px\"\n  },\n  playerInfo: {}\n};\n\nconst Player = ({\n  count,\n  increaseCounter\n}) => {\n  const [points, setPoints] = useState(20);\n  const alert = useAlert();\n\n  const handleClick = () => {\n    if (points > 0) {\n      increaseCounter();\n      setPoints(points - 1 + grantPrize());\n    } else {\n      alert.show(React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"You're out of points\"));\n    }\n  };\n\n  const grantPrize = () => {\n    const new_count = count + 1;\n    var prize = 0;\n    if (new_count % 10 === 0) prize = 5;\n    if (new_count % 100 === 0) prize = 40;\n    if (new_count % 500 === 0) prize = 250;\n\n    if (prize !== 0) {\n      alert.show(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"You win \", prize, \" points!\"));\n    }\n\n    return prize;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: styles.roundButton,\n    onClick: () => {\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Increase\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"counter\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" You have \", points, \" points \"));\n};\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const increaseCounter = () => {\n    setCount(count + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"(will be hidden later)\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, count), React.createElement(Player, {\n    count: count,\n    increaseCounter: increaseCounter,\n    style: styles.playerInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nfunction App() {\n  return React.createElement(\"div\", {\n    style: styles.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tuure/projects/preassignments/preassignment_vincit/src/App.js"],"names":["React","useState","useAlert","styles","center","margin","position","top","left","MsTransform","transform","textAlign","roundButton","borderRadius","padding","backgroundColor","outline","fontSize","fontFamily","textShadow","color","lineHeight","boxShadow","marginBottom","playerInfo","Player","count","increaseCounter","points","setPoints","alert","handleClick","grantPrize","show","new_count","prize","Counter","setCount","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useAlert } from 'react-alert'\nimport './App.css';\n\nconst styles = {\n  center: {\n    margin: 0,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    MsTransform: \"translate(-50%, -50%)\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  },\n  roundButton: {\n    borderRadius: \"50%\",\n    padding: 58,\n    backgroundColor: \"#ff4f28\",\n    outline: \"none\",\n    fontSize: \"30px\",\n    fontFamily: \"Montserrat\",\n    textShadow: \"4px 4px black\",\n    color: \"white\",\n    lineHeight: 1.9,\n    boxShadow: \"5px 10px #282828\",\n    marginBottom: \"80px\"\n  },\n  playerInfo: {\n\n  }\n}\n\nconst Player = ({ count, increaseCounter }) => {\n  const [points, setPoints] = useState(20);\n\n  const alert = useAlert()\n\n  const handleClick = () => {\n    if (points > 0) {\n      increaseCounter()\n      setPoints(points - 1 + grantPrize())\n    }\n    else {\n      alert.show(<div style={{ color: 'red' }}>You're out of points</div>)\n    }\n  }\n\n  const grantPrize = () => {\n    const new_count = count + 1\n    var prize = 0\n\n    if (new_count % 10 === 0)\n      prize = 5\n    if (new_count % 100 === 0)\n      prize = 40\n    if (new_count % 500 === 0)\n      prize = 250\n    \n    if (prize !== 0) {\n      alert.show(<div>You win { prize } points!</div>)\n    }\n      \n    return prize\n  }\n\n  return (\n    <div>\n      <button style={styles.roundButton} onClick={() => {handleClick()}}>\n        <div>Increase</div>\n        <div>counter</div>\n      </button>\n      <p> You have { points } points </p>\n    </div>\n  )\n}\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const increaseCounter = () => {\n    setCount(count + 1)\n  }\n\n  return (\n    <div>\n      <i>(will be hidden later)</i>\n      <h1>{ count }</h1>\n      <Player \n        count={count}\n        increaseCounter={increaseCounter}\n        style={styles.playerInfo}>\n      </Player>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div style={styles.center}>\n      <Counter>\n        \n      </Counter>\n    </div>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}